DROP SCHEMA IF EXISTS public CASCADE;

CREATE SCHEMA public;

DROP TABLE IF EXISTS users CASCADE;

CREATE TABLE users
(
    id       INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR(255) UNIQUE,
    email    VARCHAR(255) UNIQUE,
    password VARCHAR(255)
);

DROP TABLE IF EXISTS subscribers CASCADE;

CREATE TYPE status_enum AS ENUM ('PENDING', 'ACCEPTED', 'REJECTED');

CREATE TABLE subscribers
(
    user_id     INT REFERENCES users (id),
    sub_user_id INT REFERENCES users (id),
    is_accepted status_enum DEFAULT 'REJECTED',
    UNIQUE (user_id, sub_user_id),
    CHECK (user_id <> sub_user_id)
);

DROP TABLE IF EXISTS posts CASCADE;

CREATE TABLE posts
(
    id         INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id    INT REFERENCES users (id),
    header     VARCHAR(500),
    content    TEXT,
    created_at TIMESTAMP
);

DROP TABLE IF EXISTS images CASCADE;

CREATE TABLE images
(
    id      INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    post_id INT REFERENCES posts (id),
    name    VARCHAR(50),
    type    VARCHAR(50),
    data    BIGINT
);

DROP TABLE IF EXISTS messages CASCADE;

CREATE TABLE messages
(
    id           INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    from_user_id INT REFERENCES users (id),
    to_user_id   INT REFERENCES users (id),
    message      TEXT NOT NULL,
    created_at   TIMESTAMP
);